<?php


namespace SUPT;

use WP_CLI;
use function WP_CLI\Utils\format_items;

/**
 * Lists, sends and removes queued emails generated by form submissions.
 */
class FormMailCommand {

	public function __construct() {
		require_once dirname( __DIR__ ) . '/Mailer.php';
	}

	/**
	 * Prints recipients of queued emails.
	 *
	 * ## OPTIONS
	 *
	 * [--field=<field>]
	 * : Prints the value of a single field for each mail.
	 *
	 * [--format=<format>]
	 * : Render output in a particular format.
	 * ---
	 * default: table
	 * options:
	 *   - table
	 *   - csv
	 *   - json
	 *   - yaml
	 * ---
	 *
	 * ## EXAMPLES
	 *
	 *  wp form mail list
	 *
	 *
	 * @subcommand list
	 */
	public function _list( $args, $assoc_args ) {
		$queue = Mailer::get_queue();
		$mails = $queue->get_all();

		$print_data = [];
		foreach ( $mails as $idx => $mail ) {
			$print_data[] = [
				'idx'      => $idx,
				'to'       => $mail->get_to(),
				'subject'  => $mail->get_subject(),
				'attempts' => $mail->get_sending_attempts(),
			];
		}

		if ( array_key_exists( 'field', $assoc_args ) ) {
			$field = $assoc_args['field'];
			if ( empty( $print_data ) ) {
				return;
			}

			if ( ! array_key_exists( $field, $print_data[0] ) ) {
				WP_CLI::error( "Invalid field: $field." );
			}

			foreach ( $print_data as $data ) {
				WP_CLI::log( $data[ $field ] );
			}

			return;
		}

		$format = $assoc_args['format'] ?? 'table';
		format_items( $format, $print_data, array( 'idx', 'to', 'subject', 'attempts' ) );
	}

	/**
	 * Sends all queued mails.
	 */
	public function send() {
		Mailer::send_mails();
	}

	/**
	 * Prints single mail.
	 *
	 * ## OPTIONS
	 *
	 * <idx>
	 * : The queue idx.
	 *
	 * ## EXAMPLES
	 *
	 *  wp form mail get 123
	 */
	public function get( $args, $assoc_args ) {
		$queue = Mailer::get_queue();
		$mails = $queue->get_all();
		$idx   = absint( $args[0] );

		if ( ! array_key_exists( $idx, $mails ) ) {
			WP_CLI::error( "Invalid id: ${args[0]}" );
		}

		/** @var Mail $mail */
		$mail = $mails[ $idx ];

		WP_CLI::log( 'To: ' . $mail->get_to() );
		WP_CLI::log( implode( "\n", $mail->get_headers() ) );
		WP_CLI::log( 'Subject: ' . $mail->get_subject() );
		WP_CLI::log( '' );
		WP_CLI::log( $mail->get_body() );
	}

	/**
	 * Deletes mails queued to send.
	 *
	 * ## OPTIONS
	 *
	 * <idx>
	 * : The queue idx.
	 *
	 * [--all]
	 * : Delete all mails in the queue.
	 */
	public function delete( $args, $assoc_args ) {
		$queue = Mailer::get_queue();

		if ( array_key_exists( 'all', $assoc_args ) ) {
			$queue->clear();

			return;
		}

		$queue->remove( absint( $args[0] ) );
	}
}

WP_CLI::add_command( 'form mail', new FormMailCommand() );

