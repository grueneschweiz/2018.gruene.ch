@use '../../../scss/variables' as v;
@use '../../../scss/mixins' as m;

.front {

	&__grid-wrapper {
		width: 100%;
		background: v.$color-white;
		@include m.fluid-props(margin-top, v.$fluid-min, v.$fluid-max, -260px, -170px);
		@include m.media(v.$size-large) {
			margin-top: -170px; // dont supercharge on 2k screens
		}
		& {
			padding-top: 300px;
		}

		&--no-campaign {
			margin-top: 0;
			padding-top: 0;
		}
	}

	&__grid {
		@include m.media(v.$DESKTOP) {
			display: grid;
			grid-template-columns: 1fr 1fr;
			@include m.fluid-props(grid-column-gap, v.$size-medium, v.$grid-max-width-max, v.$grid-gap-min, v.$grid-gap-max);
			@include m.fluid-props(grid-row-gap, v.$size-medium, v.$grid-max-width-max, 6px, 72px);
			& {
				align-items: start;
				max-width: v.$grid-max-width-max;
				width: calc(100% - 2 * #{v.$grid-min-side-margin});
				margin: 0 v.$grid-min-side-margin;
			}
		}

		@include m.media(v.$grid-max-width-max + 2 * v.$grid-min-side-margin) {
			margin-left: auto;
			margin-right: auto;
			width: v.$grid-max-width-max;
		}
	}

	&__article {
		@include m.media(v.$DESKTOP) {
			height: 100%;
		}

		&--2-col {
			grid-column: 1 / 3;
		}
	}
}
