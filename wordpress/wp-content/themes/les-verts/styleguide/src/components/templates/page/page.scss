@use "sass:math";
@use "../../../scss/variables" as v;
@use "../../../scss/mixins" as m;

.page {
	/**
		* ======
		* Layout
		* ======
	  */
	$page-grid-desktop: #{v.$page-grid-content-max-width + v.$page-grid-side-width + 2 * v.$page-grid-padder-min-width};
	$page-grid-wide: #{v.$page-grid-content-max-width + 2 * (v.$page-grid-side-width + v.$page-grid-padder-regular-width + v.$page-grid-wide-side-max-width)};

	&__grid {
		display: grid;
		grid-template-columns: [full-start] 1fr [wide-start] 0 [side-left-start] 0 [side-left-end content-start] v.$page-grid-content-min-width [content-end side-right-start] 0 [side-right-end] 0 [wide-end] 1fr [full-end];

		@include m.media(#{v.$page-grid-content-min-width + 2 * v.$page-grid-padder-regular-width}) {
			grid-template-columns: [full-start] v.$page-grid-padder-regular-width [wide-start] 0 [side-left-start] 0 [side-left-end content-start] 1fr [content-end side-right-start] 0 [side-right-end] 0 [wide-end] v.$page-grid-padder-regular-width [full-end];
		}

		@include m.media(#{v.$page-grid-content-max-width + 2 * v.$page-grid-padder-regular-width}) {
			grid-template-columns: [full-start] v.$page-grid-padder-regular-width [wide-start] 1fr [side-left-start] 0 [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] 0 [side-right-end] 1fr [wide-end] v.$page-grid-padder-regular-width [full-end];
		}

		@include m.media(#{v.$page-grid-content-max-width + v.$page-grid-side-width + 2 * v.$page-grid-padder-min-width}) {
			grid-template-columns: [full-start] 1fr [wide-start] 0 [side-left-start] v.$page-grid-side-width [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] 0 [side-right-end] 0 [wide-end] 1fr [full-end];

			&--no-sidebar {
				grid-template-columns: [full-start] v.$page-grid-padder-regular-width [wide-start] 0 [side-left-start] 1fr [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] 1fr [side-right-end] 0 [wide-end] v.$page-grid-padder-regular-width [full-end];
			}
		}

		@include m.media(#{v.$page-grid-content-max-width + v.$page-grid-side-width + 2 * v.$page-grid-padder-regular-width}) {
			grid-template-columns: [full-start] v.$page-grid-padder-regular-width [wide-start] 0 [side-left-start] v.$page-grid-side-width [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] 1fr [side-right-end] 0 [wide-end] v.$page-grid-padder-regular-width [full-end];

			&--no-sidebar {
				grid-template-columns: [full-start] v.$page-grid-padder-regular-width [wide-start] 0 [side-left-start] 1fr [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] 1fr [side-right-end] 0 [wide-end] v.$page-grid-padder-regular-width [full-end];
			}
		}

		@include m.media(#{v.$page-grid-content-max-width + 2 * (v.$page-grid-side-width + v.$page-grid-padder-regular-width)}) {
			grid-template-columns: [full-start] v.$page-grid-padder-regular-width [wide-start] 1fr [side-left-start] v.$page-grid-side-width [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] v.$page-grid-side-width [side-right-end] 1fr [wide-end] v.$page-grid-padder-regular-width [full-end];
		}

		@include m.media($page-grid-wide) {
			grid-template-columns: [full-start] 1fr [wide-start] v.$page-grid-wide-side-max-width [side-left-start] v.$page-grid-side-width [side-left-end content-start] v.$page-grid-content-max-width [content-end side-right-start] v.$page-grid-side-width [side-right-end] v.$page-grid-wide-side-max-width [wide-end] 1fr [full-end];
		}

		@media print {
			display: block;
		}
	}

	&__full {
		grid-column-start: full-start;
		grid-column-end: full-end;
	}

	&__wide {
		grid-column-start: wide-start;
		grid-column-end: wide-end;

		&--content-width {
			max-width: v.$page-grid-content-max-width;
		}

		@include m.only_ie10_above() {
			max-width: v.$page-grid-content-max-width;
			margin: auto;
		}
	}

	&__side {
		grid-column-start: side-left-start;
		grid-column-end: side-right-end;

		&--full {
			grid-column-start: full-start;
			grid-column-end: full-end;
		}

		@include m.media($page-grid-desktop) {
			&--left {
				grid-column-start: side-left-start;
				grid-column-end: side-left-end;
			}

			&--right {
				grid-column-start: side-right-start;
				grid-column-end: side-right-end;
			}
		}
	}

	&__row {
		@include m.media($page-grid-desktop) {
			&--1 {
				grid-row: 1 / 2;
			}

			&--2 {
				grid-row: 2 / 3;
			}
		}
	}

	&__content {
		grid-column-start: content-start;
		grid-column-end: content-end;

		@include m.only_ie10_above() {
			max-width: v.$page-grid-content-max-width;
			margin: auto;
		}
	}

	&__footer {
		@include m.fluid-props(padding-top, v.$size-medium, v.$grid-max-width-max, 60px, 90px);
		& {
			background-color: v.$color-white;
		}
	}

	/**
		* ==========
		* Components
		* ==========
	  */
	&__header-image {
		width: 100%;
		height: 50vh;
		max-height: 600px;

		@media only screen and (min-height: 900px) {
			height: calc(100vh - 400px);
			max-height: calc(100vh - 400px);
		}
	}

	&__header-wrapper {
		padding-top: 40px;

		@include m.media(v.$DESKTOP) {
			// keep this discrete, else the post meta position cant be set correctly
			padding-top: 60px;
		}

		&--highlighted {
			background: v.$color-grey-1;
			@include m.fluid-props(padding-bottom, v.$fluid-min, v.$fluid-max, 40px, 60px);
		}
	}

	&__header-text,
	&__header-text p {
		font-size: 1.25rem;

		@include m.media(v.$size-small) {
			font-size: 1.46875rem;
		}
	}

	&__header-text--bold {
		font-weight: v.$font-weight-semi;
	}

	&__breadcrumbs--distracting {
		display: none;
	}

	&__post-meta-wrapper {
		@extend .page__side;
		@extend .page__side--left;
		@extend .page__side--full;
		@extend .page__grid;

		@include m.media($page-grid-desktop) {
			display: flex;
			flex-direction: column;
			padding-right: 40px;
			height: 100%;
		}

		@include m.only_ie10_above() {
			display: none; // sorry folks!
		}
	}

	&__post-meta {
		@extend .page__content;

		background-color: v.$color-grey-1;
		border-top: 2px solid v.$color-primary;
		padding: 0 15px;

		@include m.high-contrast {
			border-color: v.$color-primary-dark;
		}

		@include m.media($page-grid-desktop) {
			background-color: transparent;
			margin-top: 72px;
			border-top: none;
			padding: 0;
		}

		&--distracting {
			display: none;
		}
	}

	&__shareable {
		@include m.media($page-grid-desktop) {
			flex-grow: 1;
		}

		&--margin-top {
			@include m.media($page-grid-desktop) {
				margin-top: 124px;
			}
		}
	}

	//noinspection CssOverwrittenProperties
	&__share {
		position: fixed;
		bottom: 0;
		left: 0;
		width: 100%;
		z-index: 10;

		@include m.media(v.$DESKTOP) {
			position: static; // IE: just keep it fixed
			position: sticky;
			top: 235px;
			z-index: 0;
			height: 300px;
		}
	}

    &:not(&--list) &__content {
		@include m.media(v.$size-small){
			p, li {
				font-size: 1.25rem;
			}

			li {
				letter-spacing: 0.015625em;
				line-height: 1.75em;
			}
		}
	}

	&__box {
		background-color: v.$color-grey-1;
		@include m.fluid-props(margin-top margin-bottom, v.$size-tiny, v.$size-medium, 25px, 35px);
		@include m.fluid-props(padding, v.$size-tiny, v.$size-medium, 12px, 40px);
		@include m.media(v.$DESKTOP) {
			margin-top: 50px;
			margin-bottom: 50px;
			padding: 60px;
		}
	}

	&__preview-articles {
		display: grid;
		grid-template-columns: 1fr;
		@include m.fluid-props(grid-column-gap, 1490px, v.$fluid-max, 40px, 100px); // 1490px = v.$page-grid-wide, but for some reason sass can't work with the variable
		@include m.fluid-props(grid-row-gap, v.$fluid-min, v.$fluid-max, 40px, 80px);
		@include m.fluid-props(margin-top margin-bottom, v.$fluid-min, v.$fluid-max, 50px, 100px);

		@include m.media(v.$size-small) {
			grid-template-columns: 1fr 1fr;
		}
	}

	&__preview-article {
		border-bottom: solid 1px v.$color-grey-2;
	}

	&__list-header {
		@include m.fluid-props(margin-top, v.$fluid-min, v.$fluid-max, 40px, 60px);
	}

	&__list-articles {
		@include m.fluid-props(margin-top, v.$fluid-min, v.$fluid-max, 40px, 60px);
		@include m.clean-ul;
	}

	&__list-article {
		@include m.clean-li;

		border-bottom: solid 1px v.$color-grey-2;

		&--hover-link {
			position: relative;
			margin-left: -15px;
			padding-left: 15px;
			margin-right: -15px;
			padding-right: 15px;
			border-bottom: none;

			&::after {
				content: ' ';
				position: absolute;
				bottom: 0;
				left: 15px;
				background: v.$color-grey-2;
				width: calc(100% - 30px);
				height: 1px;
			}

			@include m.hover {
				background: v.$color-grey-1;
			}
		}
	}

	&__list-footer {
		width: 100%;
		@include m.fluid-props(margin-top margin-bottom padding-bottom, v.$fluid-min, v.$fluid-max, 30px, 50px);
	}

	&__list-pagination {
		display: flex;
		justify-content: center;
	}

	&__list-events-nav {
		margin-top: 15px;
		display: flex;
		justify-content: center;
	}
}
